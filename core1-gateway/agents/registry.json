{
  "version": "1.0.0",
  "last_updated": "2025-07-30T12:00:00Z",
  "description": "Dynamic agent registry for MCP system - allows hot-swappable agent definitions",
  "agents": {
    "reminder": {
      "type": "n8n",
      "enabled": true,
      "webhook": "http://localhost:5678/webhook/create-reminder",
      "timeout": 30,
      "priority": 5,
      "description": "Creates reminders and scheduling tasks via n8n workflow",
      "capabilities": ["scheduling", "reminders", "notifications"],
      "input_schema": {
        "required": ["message", "datetime"],
        "optional": ["priority", "category"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:5678/healthz",
        "interval": 60
      }
    },
    "calendar_event": {
      "type": "n8n",
      "enabled": true,
      "webhook": "http://localhost:5678/webhook/create-calendar-event",
      "timeout": 30,
      "priority": 5,
      "description": "Creates calendar events via n8n workflow",
      "capabilities": ["calendar", "events", "scheduling"],
      "input_schema": {
        "required": ["title", "start_time", "end_time"],
        "optional": ["description", "location", "attendees"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:5678/healthz",
        "interval": 60
      }
    },
    "email_send": {
      "type": "n8n",
      "enabled": true,
      "webhook": "http://localhost:5678/webhook/send-email",
      "timeout": 45,
      "priority": 5,
      "description": "Sends emails via n8n workflow",
      "capabilities": ["email", "communication", "notifications"],
      "input_schema": {
        "required": ["to", "subject", "body"],
        "optional": ["cc", "bcc", "attachments", "priority"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:5678/healthz",
        "interval": 60
      }
    },
    "coding_request": {
      "type": "openrouter",
      "enabled": true,
      "url": "http://localhost:4000/api/route-code",
      "timeout": 120,
      "priority": 7,
      "description": "Routes coding requests to OpenRouter API",
      "capabilities": ["coding", "programming", "development", "ai_assistance"],
      "input_schema": {
        "required": ["prompt", "language"],
        "optional": ["max_tokens", "temperature", "model"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:4000/health",
        "interval": 120
      }
    },
    "ai_chat": {
      "type": "openrouter",
      "enabled": true,
      "url": "http://localhost:4000/api/chat",
      "timeout": 60,
      "priority": 6,
      "description": "General AI chat requests via OpenRouter",
      "capabilities": ["chat", "conversation", "ai_assistance", "general_knowledge"],
      "input_schema": {
        "required": ["message"],
        "optional": ["context", "persona", "max_tokens", "temperature"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:4000/health",
        "interval": 120
      }
    },
    "file_search": {
      "type": "local",
      "enabled": true,
      "handler": "file_system",
      "timeout": 15,
      "priority": 3,
      "description": "Local file system search operations",
      "capabilities": ["file_search", "filesystem", "search", "local_operations"],
      "input_schema": {
        "required": ["query"],
        "optional": ["path", "file_type", "recursive", "max_results"]
      },
      "health_check": {
        "method": "INTERNAL",
        "interval": 30
      }
    },
    "file_read": {
      "type": "local",
      "enabled": true,
      "handler": "file_system",
      "timeout": 10,
      "priority": 2,
      "description": "Local file reading operations",
      "capabilities": ["file_read", "filesystem", "local_operations"],
      "input_schema": {
        "required": ["file_path"],
        "optional": ["encoding", "max_size"]
      },
      "health_check": {
        "method": "INTERNAL",
        "interval": 30
      }
    },
    "file_write": {
      "type": "local",
      "enabled": true,
      "handler": "file_system",
      "timeout": 15,
      "priority": 4,
      "description": "Local file writing operations",
      "capabilities": ["file_write", "filesystem", "local_operations"],
      "input_schema": {
        "required": ["file_path", "content"],
        "optional": ["encoding", "create_dirs", "backup"]
      },
      "health_check": {
        "method": "INTERNAL",
        "interval": 30
      }
    },
    "system_status": {
      "type": "local",
      "enabled": true,
      "handler": "system_monitor",
      "timeout": 5,
      "priority": 1,
      "description": "System health and status monitoring",
      "capabilities": ["system_monitoring", "health_check", "metrics", "local_operations"],
      "input_schema": {
        "required": [],
        "optional": ["metric_type", "detailed"]
      },
      "health_check": {
        "method": "INTERNAL",
        "interval": 15
      }
    },
    "web_search": {
      "type": "external",
      "enabled": false,
      "url": "http://localhost:3001/api/web-search",
      "timeout": 30,
      "priority": 6,
      "description": "Web search capabilities via external service",
      "capabilities": ["web_search", "internet", "research", "information_retrieval"],
      "input_schema": {
        "required": ["query"],
        "optional": ["max_results", "safe_search", "region", "language"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:3001/health",
        "interval": 60
      }
    },
    "weather": {
      "type": "external",
      "enabled": false,
      "url": "http://localhost:3002/api/weather",
      "timeout": 20,
      "priority": 5,
      "description": "Weather information and forecasts",
      "capabilities": ["weather", "forecast", "location_services"],
      "input_schema": {
        "required": ["location"],
        "optional": ["days", "units", "include_forecast"]
      },
      "health_check": {
        "method": "GET",
        "url": "http://localhost:3002/health",
        "interval": 120
      }
    },
    "speech_synthesis": {
      "type": "local",
      "enabled": false,
      "handler": "speech_engine",
      "timeout": 25,
      "priority": 4,
      "description": "Text-to-speech synthesis",
      "capabilities": ["speech", "tts", "audio", "accessibility"],
      "input_schema": {
        "required": ["text"],
        "optional": ["voice", "speed", "pitch", "output_format"]
      },
      "health_check": {
        "method": "INTERNAL",
        "interval": 60
      }
    }
  },
  "agent_types": {
    "n8n": {
      "description": "n8n workflow automation platform",
      "dispatch_method": "webhook_post",
      "default_timeout": 30,
      "health_check_path": "/healthz"
    },
    "openrouter": {
      "description": "OpenRouter AI API service",
      "dispatch_method": "api_post",
      "default_timeout": 60,
      "health_check_path": "/health"
    },
    "local": {
      "description": "Local system handlers",
      "dispatch_method": "internal_call",
      "default_timeout": 15,
      "health_check_path": "INTERNAL"
    },
    "external": {
      "description": "External API services",
      "dispatch_method": "api_post",
      "default_timeout": 30,
      "health_check_path": "/health"
    }
  },
  "global_settings": {
    "max_concurrent_requests": 10,
    "default_retry_attempts": 3,
    "health_check_enabled": true,
    "health_check_interval": 60,
    "auto_disable_failed_agents": true,
    "failed_threshold": 5,
    "registry_reload_interval": 300
  }
}
