version: '3.8'

services:
  # Main EmotionalAI Application
  emotionalai-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
      - "8001:8001"  # WebSocket port
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/emotionalai
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
      - llm-router
    networks:
      - emotionalai-network
    restart: unless-stopped

  # LLM Router Service
  llm-router:
    build:
      context: .
      dockerfile: Dockerfile.llm
    ports:
      - "8002:8002"
    environment:
      - MYTHOMAX_ENDPOINT=http://mythomax:11434
      - OPENCHAT_ENDPOINT=http://openchat:11434
      - QWEN2_ENDPOINT=http://qwen2:11434
      - KIMIK2_ENDPOINT=http://kimik2:11434
    volumes:
      - ./models:/app/models
      - ./cache:/app/cache
    networks:
      - emotionalai-network
    restart: unless-stopped

  # LLM Models (Ollama-based)
  mythomax:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - mythomax_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    command: >
      sh -c "ollama pull mythomax &&
             ollama serve"
    networks:
      - emotionalai-network
    restart: unless-stopped

  openchat:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"
    volumes:
      - openchat_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    command: >
      sh -c "ollama pull openchat &&
             ollama serve"
    networks:
      - emotionalai-network
    restart: unless-stopped

  qwen2:
    image: ollama/ollama:latest
    ports:
      - "11436:11434"
    volumes:
      - qwen2_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    command: >
      sh -c "ollama pull qwen2.5:7b &&
             ollama serve"
    networks:
      - emotionalai-network
    restart: unless-stopped

  kimik2:
    image: ollama/ollama:latest
    ports:
      - "11437:11434"
    volumes:
      - kimik2_data:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama
    command: >
      sh -c "ollama pull kimik2 &&
             ollama serve"
    networks:
      - emotionalai-network
    restart: unless-stopped

  # Database Services
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=emotionalai
      - MONGO_INITDB_ROOT_PASSWORD=secure_password_123
      - MONGO_INITDB_DATABASE=emotionalai
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - emotionalai-network
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass secure_redis_123
    volumes:
      - redis_data:/data
    networks:
      - emotionalai-network
    restart: unless-stopped

  # Monitoring and Logging
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - emotionalai-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - emotionalai-network
    restart: unless-stopped

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - emotionalai-app
    networks:
      - emotionalai-network
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:
  mythomax_data:
  openchat_data:
  qwen2_data:
  kimik2_data:
  prometheus_data:
  grafana_data:

networks:
  emotionalai-network:
    driver: bridge
